buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.3'
        classpath 'com.avast.gradle:docker-compose-gradle-plugin:0.4.3'
        classpath 'com.github.ben-manes:gradle-versions-plugin:0.15.0'
    }
}

plugins {
    id 'net.researchgate.release' version '2.6.0'
}

group 'cz.alenkacz.db'
version = version == 'unspecified' ? 'DEVELOPER-SNAPSHOT' : version

apply plugin: 'java'
apply plugin: 'scala'
apply plugin: 'maven'
apply plugin: "maven-publish"
apply plugin: 'com.jfrog.bintray'
apply plugin: 'docker-compose'
apply plugin: 'com.github.ben-manes.versions'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

ext {
    scalaVersion = '2.12'
    scalaLibraryVersion = '2.12.2'
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.5'
}

dependencies {
    compile 'com.typesafe:config:1.3.1'
    compile "org.scala-lang:scala-library:${scalaLibraryVersion}"
    compile 'com.github.mauricio:postgresql-async_2.12:0.2.21'

    testCompile 'junit:junit:4.12'
    testCompile "org.scalatest:scalatest_${scalaVersion}:3.0.3"
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

artifacts {
    archives sourcesJar
}

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_KEY')
    configurations = ['archives']
    publish = true
    pkg {
        repo = 'maven'
        name = 'postgres-scala_2.12'
        desc = 'Asynchronous postgresql access from Scala.'
        licenses = ['MIT']
        vcsUrl = 'https://github.com/alenkacz/postgres-scala.git'
        websiteUrl = 'https://github.com/alenkacz/postgres-scala'
        issueTrackerUrl = 'https://github.com/alenkacz/postgres-scala/issues'
        labels = ['postgresql', 'scala', 'database']
        version {
            name = project.version
            vcsTag = project.version
        }
    }
}

dockerCompose.isRequiredBy(test)
test.doFirst {
    dockerCompose.exposeAsEnvironment(test)
}
